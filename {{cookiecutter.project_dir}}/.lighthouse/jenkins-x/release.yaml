apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/python/release.yaml@versionStream
          name: ""
          resources:
            requests:
              cpu: 400m
              memory: 512Mi
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: ""
          resources: {}
        - name: next-version
          resources: {}
        - name: jx-variables
          resources: {}
        - name: build-python-validate
          image: shiti/python-poetry:1.0.0
          resources: { }
          env:
            - name: POETRY_DJANGO_SETTINGS_MODULE
              value: "config.settings.test"
          script: |
            #!/bin/sh
            apt-get install -y libpq-dev gcc
            cd {{cookiecutter.module_name}}_api
            poetry check
            poetry install --no-interaction
            poetry run pylint --init-hook="sys.path.append('.')" --load-plugins pylint_django **/*.py
            poetry run pytest
        - name: check-registry
          resources: {}
        - name: build-container-build
          image: gcr.io/kaniko-project/executor:v1.6.0-debug
          resources: { }
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source/{{cookiecutter.module_name}}_api --dockerfile=${DOCKERFILE_PATH:-Dockerfile} --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/{{cookiecutter.project_name}}-api:$VERSION
        - name: promote-changelog
          image: ghcr.io/jenkins-x/jx-changelog:0.0.47
          resources: { }
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            if [ -d "charts/{{cookiecutter.project_name}}-api" ]; then
            jx gitops yset -p version -v "$VERSION" -f ./charts/{{cookiecutter.project_name}}-api/Chart.yaml
            jx gitops yset -p appVersion -v "$VERSION" -f ./charts/{{cookiecutter.project_name}}-api/Chart.yaml
            jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/{{cookiecutter.project_name}}-api -f ./charts/{{cookiecutter.project_name}}-api/values.yaml
            jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/{{cookiecutter.project_name}}-api/values.yaml;
            else echo no charts; fi

            git add * || true
            git commit -a -m "chore: release $VERSION" --allow-empty
            git tag -fa v$VERSION -m "Release version $VERSION"
            git push --force origin v$VERSION

            jx changelog create --version v${VERSION}
        - name: promote-helm-release
          resources: {}
        - name: promote-jx-promote
          resources: {}
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
